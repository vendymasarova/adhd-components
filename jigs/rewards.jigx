title: Rewards
type: jig.default

datasources:
  rewards: 
    type: datasource.sqlite
    options:
      provider: DATA_PROVIDER_DYNAMIC
    
      entities:
        - default/rewards
    
      query: 
        SELECT 
        id, 
        '$.name', 
        '$.goal', 
        '$.image', 
        '$.description', 
        '$.strategy_id' 
        FROM [default/rewards] 
        WHERE '$.strategy_id' = 1
        ORDER BY '$.goal'
      queryParameters:
        strategyId: =@ctx.jig.inputs.strategyId           

          
  extra-reward: 
    type: datasource.sqlite
    options:
      provider: DATA_PROVIDER_DYNAMIC
    
      entities:
        - default/extra-rewards
    
      query: 
        SELECT 
        id, 
        '$.image', 
        '$.name',
        '$.user',
        '$.points',
        '$.isCompleted'
        FROM [default/extra-rewards]
        WHERE '$.image' is not NULL
        AND '$.user' is @user
        AND '$.isCompleted' is 0
        ORDER BY '$.points'
      queryParameters:
        user: =@ctx.user.email
       
  results:
    type: datasource.sqlite
    options:
      provider: DATA_PROVIDER_DYNAMIC
  
      entities:
        - default/strategies-results
  
      query: 
        SELECT 
        id, 
        '$.end',
        '$.start',
        '$.time',
        '$.gems',
        '$.strategyId',
        '$.user'
        FROM [default/strategies-results]
        WHERE '$.user' = @user
      queryParameters:
        user: =@ctx.user.email
        
  
  mood-checkins-gems:
    type: datasource.sqlite
    options:
      provider: DATA_PROVIDER_DYNAMIC
  
      entities:
        - default/mood-checkins
  
      query: 
        SELECT id, 
          '$.gems', 
          '$.user' 
        FROM [default/mood-checkins] 
        WHERE '$.user' = @user
      queryParameters:
        user: =@ctx.user.email
        
  results-rewards:
    type: datasource.sqlite
    options:
      provider: DATA_PROVIDER_DYNAMIC
  
      entities:
        - default/strategies-results
        - default/rewards
        - default/strategies-assign
        - default/strategies
  
      query:
        SELECT
            a.id AS id,
            json_extract(a.data, '$.id') AS reward_id,
            json_extract(a.data, '$.name') AS name,
            json_extract(a.data, '$.goal') AS goal,
            json_extract(a.data, '$.image') AS image,
            json_extract(a.data, '$.description') AS description,
            json_extract(a.data, '$.strategy_id') AS strategy_id,
            json_extract(a.data, '$.isCompleted') AS isCompleted,
            json_extract(b.data, '$.id') AS result_id,
            json_extract(b.data, '$.end') AS time_end,
            json_extract(b.data, '$.start') AS start,
            json_extract(b.data, '$.time') AS time,
            json_extract(b.data, '$.gems') AS gems,
            json_extract(c.data, '$.user') AS user,
            json_extract(d.data, '$.name') AS stategy_name,
            (
                SELECT COUNT(*)
                FROM [default/strategies-results] s
                WHERE json_extract(s.data, '$.strategyId') = json_extract(a.data, '$.strategy_id')
                AND json_extract(s.data, '$.user') = @user
            ) AS total_results
        FROM [default/rewards] a
        LEFT JOIN [default/strategies-results] b ON json_extract(a.data, '$.strategy_id') = json_extract(b.data, '$.strategyId')
        LEFT JOIN [default/strategies-assign] c ON json_extract(a.data, '$.strategy_id') = json_extract(c.data, '$.strategy_id')
        LEFT JOIN [default/strategies] d ON json_extract(a.data, '$.strategy_id') = json_extract(d.data, '$.strategy_id')
        WHERE user = @user
        GROUP BY strategy_id, name, goal
        HAVING goal <= total_results
        ORDER BY strategy_id
      queryParameters:
        user: =@ctx.user.email
children:
  - type: component.custom-component
    componentId: points-preview-card
    inputs: 
      results: =@ctx.datasources.results
      mood-gems: =@ctx.datasources.mood-checkins-gems.gems
  - type: component.custom-component
    componentId: title
    inputs:
      title: Badges
  - type: component.list
    options:
      isHorizontal: true
      isHorizontalScrollIndicatorHidden: true
      maximumItemsToRender: 3
      data: =@ctx.datasources.results-rewards
      item: 
        type: component.custom-component
        componentId: achievement
        inputs:
          rewards: =@ctx.current.item
          description: ='You completed strategy ' & @ctx.current.item.stategy_name & ' ' & @ctx.current.item.goal & ' times'
          progressbar: false
  - type: component.custom-component
    componentId: title
    inputs:
      title: Extra Rewards
      subtitle: =$count(@ctx.datasources.extra-reward) != 0 ? null:'There are no extra rewards from your parent'
      link: all-extra-rewards
      icon: arrow-right
      email: =@ctx.user.email
  - type: component.list
    options:
      isHorizontal: true
      isHorizontalScrollIndicatorHidden: true
      maximumItemsToRender: 3
      data: =@ctx.datasources.extra-reward
      item: 
        type: component.custom-component
        componentId: extra-reward
        inputs:
          rewards: =@ctx.current.item
          gems: =$sum(@ctx.datasources.results.gems) + $sum(@ctx.datasources.mood-checkins-gems.gems)
          goTo: chat