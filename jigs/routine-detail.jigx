title: ' '
type: jig.default
icon: checklist

onFocus: 
  type: action.action-list
  options:
    isSequential: true
    actions: 
      - type: action.set-state
        options:
          state: =@ctx.solution.state.add-todo
          value: 0

actions:
  - children:
      - type: action.action-list
        options:
          title: Complete
          isSequential: true
          style:
            isDisabled: |
              =($count(@ctx.datasources.checklist[isChecked = 1]) < $count(@ctx.datasources.todos))
          actions:
            # - type: action.execute-entity
            #   options: 
            #     provider: DATA_PROVIDER_DYNAMIC
            #     entity: default/reminders-and-routines
            #     method: update
            #     data: =@ctx.datasources.reminders-and-routines-data[id = @ctx.jig.inputs.itemId].{'id':id, 'isDone':true}
            - type: action.execute-entity
              options: 
                provider: DATA_PROVIDER_DYNAMIC
                entity: default/routine-checkins
                goBack: home
                method: save
                data:
                  date: =$now()
                  user: =@ctx.user.email
                  routine_id: =@ctx.jig.inputs.routineId
                onSuccess: 
                  title: You made it!
                  description: You are prepared for your activity
            - type: action.execute-entities
              options: 
                provider: DATA_PROVIDER_LOCAL
                method: delete
                entity: checklist-local
                goBack: stay
                data: |
                  =@ctx.datasources.checklist.{ 'id': id }[]
      - type: action.submit-form
        when: =@ctx.solution.state.add-todo = 1 
        options:
          formId: new-todo-routine-form
          provider: DATA_PROVIDER_DYNAMIC
          title: Create new Todo
          entity: default/todos
          method: save
          goBack: stay 
          data: 
            name: =@ctx.components.name.state.value
            isChecked: false
            routine_id: =@ctx.jig.inputs.routineId
          onSuccess: 
            title: New todo created
            type: action.set-state
            options:
              state: =@ctx.solution.state.add-todo
              value: 0

summary:
  children:
    type: component.summary
    options: 
      layout: default
      leftIcon:
        element: icon
        icon: check-badge
        isDuotone: true
      title: |
        =$count(@ctx.datasources.checklist[isChecked = 1]) & ' / ' & $count(@ctx.datasources.todos) & ' Completed'

datasources:
  checklist:
    type: datasource.sqlite
    options:
      provider: DATA_PROVIDER_LOCAL
  
      entities:
        - checklist-local
  
      query: |
        SELECT id
        ,'$.name'
        ,'$.isChecked'
        ,'$.date'
        ,'$.user'
        FROM [checklist-local]
      queryParameters:
        dateofcheck: =$now()
  
  todos:
    type: datasource.sqlite
    options:
      provider: DATA_PROVIDER_DYNAMIC
  
      entities:
        - default/todos
  
      query: 
        SELECT 
        id, 
        '$.name', 
        '$.isChecked',
        '$.routine_id'
        FROM [default/todos]
        WHERE '$.routine_id' = @routineId
        ORDER BY '$.name'
      queryParameters:
        routineId: =@ctx.jig.inputs.routineId
  
  routines:
    type: datasource.sqlite
    options:
      provider: DATA_PROVIDER_DYNAMIC
  
      entities:
        - default/reminders-and-routines
  
      query: 
        SELECT 
          id, 
          '$.name', 
          '$.image',
          '$.isDone',
          '$.type',
          '$.time',
          '$.routine_id',
          '$.description'
        FROM [default/reminders-and-routines] 
        WHERE '$.routine_id' = @yourRoutineId
      queryParameters:
        yourRoutineId: =@ctx.jig.inputs.routineId

children:
  - type: component.custom-component
    componentId: routine-header
    inputs: 
      routines: =@ctx.datasources.routines 
  - type: component.list
    when: =$count(@ctx.datasources.checklist[is_checked = 1]) < $count(@ctx.datasources.todos)
    options:
      data: =@ctx.datasources.todos
      item:
        type: component.list-item
        options:
          swipeable:
            left:
              - label: Delete
                icon: trash-bin-circle
                color: negative
                onPress: 
                  type: action.execute-entity
                  options:
                    provider: DATA_PROVIDER_DYNAMIC
                    entity: default/todos
                    method: delete
                    goBack: stay
                    data:
                      id: =@ctx.current.item.id
                  
          title: =@ctx.current.item.name
          color:
            - when: =1=1
              color: color2
          style:
            isStrikeThrough: =@ctx.datasources.checklist[id=@ctx.current.item.id].isChecked = 1
          leftElement: 
            element: icon
      #      icon: checkbox-unchecked
            icon: |
              =@ctx.datasources.checklist[id=@ctx.current.item.id].isChecked = 1 ? 'checkbox-checked' : 'checkbox-unchecked'
          onPress: 
            type: action.execute-entity
            options: 
              provider: DATA_PROVIDER_LOCAL
              entity: checklist-local
              method: save
              goBack: stay
              data: 
                id: =@ctx.current.item.id
                name: =@ctx.current.item.name
                check_date: =$now()
                isChecked: |
                    =@ctx.datasources.checklist[id=@ctx.current.item.id].isChecked = 1 ? 0 : 1
  - type: component.custom-component
    componentId: plus-btn
  
  - type: component.form
    when: =@ctx.solution.state.add-todo = 1
    instanceId: new-todo-routine-form
    options:
      children:
        - type: component.text-field
          instanceId: name
          options:
            label: Todo title
  
          
       