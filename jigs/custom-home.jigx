title: Adhd 
# description: =$count(@ctx.datasources.actual-day-and-mood) >= 1 ? 'ano':'ne'
# description: =$type($count(@ctx.datasources.actual-day-and-mood))
# description: |
#      =($fromMillis($toMillis($now()), '[h01]:[m01]') >= $fromMillis($toMillis(@ctx.datasources.reminders.reminder-start), '[h01]:[m01]')) and ($fromMillis($toMillis($now()), '[h01]:[m01]') <= $fromMillis($toMillis(@ctx.datasources.reminders.reminder-end), '[h01]:[m01]')) and ($number($fromMillis($toMillis($now()), '[H01]')) <= 14 and $string(@ctx.datasources.actual-day-and-mood) = '[]') 
type: jig.default

onFocus: 
  type: action.set-state
  options:
    state: =@ctx.solution.state.today
    value: =$fromMillis($toMillis($now()), '[D01].[M01].[Y]')

datasources:
  reminders:
    type: datasource.sqlite
    options:
      provider: DATA_PROVIDER_DYNAMIC
  
      entities:
        - default/reminders-and-routines
  
      query: 
        SELECT 
        id,
        '$.routine_id',
        '$.name',
        '$.date',
        '$.image',
        '$.isDone',
        '$.type',
        '$.time',
        '$.isCheckable',
        '$.reminder-title',
        '$.reminder-time',
        '$.routine-subject',
        '$.reminder-description',
        '$.isReminiscent',
        '$.has-detail',
        '$.priority',
        '$.linkTo',
        '$.time_of_day',
        STRFTIME('%H:%M', json_extract(data, '$.reminder-start')) AS reminder_start,
        STRFTIME('%H:%M', json_extract(data, '$.reminder-end')) AS reminder_end
        FROM [default/reminders-and-routines]
        WHERE STRFTIME('%d.%m.%Y', json_extract(data, '$.date')) = @today 
        AND '$.isDone' = false
        AND STRFTIME('%H:%M', 'now') BETWEEN reminder_start AND reminder_end
        AND ('$.time_of_day' = 'both' OR '$.time_of_day' = @now)
        AND ((strftime('%H:%M', 'now') < '14:00' and @actualDayData is '[]') or (strftime('%H:%M', 'now') > '14:00' and (@actualDayData is '[]' or @countActualDayData = 1))) 
      queryParameters:
        today: =$fromMillis($toMillis($now()), '[D01].[M01].[Y]')
        now: =$fromMillis($toMillis($now()), '[P]')
        actualDayData: =$string(@ctx.datasources.actual-day-and-mood)
        countActualDayData: =$count(@ctx.datasources.actual-day-and-mood)
        
  mood-checkins:
    type: datasource.sqlite
    options:
      provider: DATA_PROVIDER_LOCAL

      entities:
        - entity: default/mood-checkins
        - entity: default/dates

      query: |
        SELECT
          a.id AS id,
          STRFTIME('%d. %m. %Y', json_extract(a.data, '$.date')) AS date,
          json_extract(a.data, '$.day') AS numberOfDay,
          STRFTIME('%d', json_extract(a.data, '$.date')) AS day,
          json_extract(b.data, '$.mood') AS mood,
          json_extract(b.data, '$.gems') AS gems,
          json_extract(a.data, '$.date') AS dayDate
        FROM [default/dates] a
        LEFT JOIN [default/mood-checkins] b ON STRFTIME('%d.%m', json_extract(a.data, '$.date')) = STRFTIME('%d.%m', json_extract(b.data, '$.date'))
        WHERE numberOfDay > @actualDay -5
        AND numberOfDay <= @actualDay
        GROUP BY date 
        ORDER BY numberOfDay 
      queryParameters:
        actualDay: =@ctx.datasources.actualDay.day
        actualYear: =$fromMillis($toMillis($now()), '[Y]')
  
  mood-checkins-gems:
    type: datasource.sqlite
    options:
      provider: DATA_PROVIDER_DYNAMIC
  
      entities:
        - default/mood-checkins
  
      query: 
        SELECT id, 
          '$.gems', 
          '$.user' 
        FROM [default/mood-checkins] 
        WHERE '$.user' = @user
      queryParameters:
        user: =@ctx.user.email
        
  actual-day-and-mood:
    type: datasource.sqlite
    options:
      provider: DATA_PROVIDER_LOCAL

      entities:
        - entity: default/mood-checkins
        - entity: default/dates

      query: |
        SELECT
          a.id AS id,
          STRFTIME('%d.%m.%Y', json_extract(a.data, '$.date')) AS date,
          json_extract(a.data, '$.day') AS day,
          json_extract(b.data, '$.mood') AS mood,
          json_extract(b.data, '$.time_of_day') AS time_of_day
          
        FROM [default/dates] a
        LEFT JOIN [default/mood-checkins] b ON STRFTIME('%d.%m.%Y', json_extract(a.data, '$.date')) = STRFTIME('%d.%m.%Y', json_extract(b.data, '$.date'))
        WHERE date = @today
        AND time_of_day is not null
      queryParameters:
        today: =$fromMillis($toMillis($now()), '[D01].[M01].[Y]')
        
  strategies-with-steps:
    type: datasource.sqlite
    options:
      provider: DATA_PROVIDER_DYNAMIC

      entities:
        - entity: default/steps
        - entity: default/strategies

      query: |
        SELECT
          a.id AS id,
          json_extract(a.data, '$.name') AS name,
          json_extract(a.data, '$.time') AS time,
          json_extract(a.data, '$.category_id') AS category_id,
          json_extract(a.data, '$.category_name') AS category_name,
          json_extract(a.data, '$.description') AS description,
          json_extract(a.data, '$.preview') AS preview,
          json_extract(a.data, '$.image') AS image,
          json_extract(a.data, '$.isDone') AS isDone,
          json_extract(a.data, '$.isInProgress') AS isInProgress,
          json_extract(a.data, '$.strategy_id') AS strategy_id,
          json_extract(a.data, '$.isActive') AS isActive,
          json_extract(b.data, '$.step') AS step_title,
          json_extract(b.data, '$.step') AS step,
          json_extract(b.data, '$.step_id') AS step_id,
          json_extract(b.data, '$.isChecked') AS step_isChecked,
          (
          SELECT COUNT(*)
          FROM [default/steps] s
          WHERE json_extract(s.data, '$.strategy_id') = json_extract(a.data, '$.strategy_id')
          ) AS total_steps,
          (
            SELECT COUNT(*)
            FROM [default/steps] s
            WHERE json_extract(s.data, '$.isChecked') = 1
            AND json_extract(s.data, '$.strategy_id') = json_extract(a.data, '$.strategy_id')
          ) AS isDoneNumber
        FROM [default/strategies] a
        LEFT JOIN [default/steps] b ON json_extract(a.data, '$.strategy_id') = json_extract(b.data, '$.strategy_id')
        WHERE isActive = 1
        GROUP BY strategy_id
        ORDER BY isDone
  
  actualDay:
    type: datasource.sqlite
    options:
      provider: DATA_PROVIDER_DYNAMIC

      entities:
        - default/dates

      query:
        SELECT
        id,
        STRFTIME('%d.%m.%Y', json_extract(data, '$.date')) AS date,
        '$.day'
        FROM [default/dates]
        WHERE date = @today
      queryParameters:
        today: =$fromMillis($toMillis($now()), '[D01].[M01].[Y]')
        
  results:
    type: datasource.sqlite
    options:
      provider: DATA_PROVIDER_DYNAMIC
  
      entities:
        - default/strategies-results
  
      query: 
        SELECT 
        id, 
        '$.gems'
        FROM [default/strategies-results]
        
  routines-with-todos:
    type: datasource.sqlite
    options:
      provider: DATA_PROVIDER_LOCAL

      entities:
        - entity: default/todos
        - entity: default/reminders-and-routines

      query: |
        SELECT
          a.id AS id,
          json_extract(a.data, '$.name') AS routine_name,
          json_extract(a.data, '$.time') AS time,
          json_extract(a.data, '$.type') AS type,
          json_extract(a.data, '$.priority') AS priority,
          json_extract(a.data, '$.description') AS description,
          json_extract(a.data, '$.image') AS routine_image,
          json_extract(a.data, '$.isDone') AS isDone,
          json_extract(a.data, '$.routine_id') AS routine_id,
          json_extract(a.data, '$.isCheckable') AS isCheckable,
          json_extract(a.data, '$.hasChecklist') AS hasChecklist,
          json_extract(b.data, '$.name') AS name,
          json_extract(b.data, '$.image') AS image,
          json_extract(b.data, '$.isChecked') AS isChecked,
          (
          SELECT COUNT(*)
          FROM [default/todos] s
          WHERE json_extract(s.data, '$.routine_id') = json_extract(a.data, '$.routine_id')
          ) AS total_todos,
          (
            SELECT COUNT(*)
            FROM [default/todos] s
            WHERE json_extract(s.data, '$.isChecked') = 1
            AND json_extract(s.data, '$.routine_id') = json_extract(a.data, '$.routine_id')
          ) AS isDoneNumber
        FROM [default/reminders-and-routines] a
        LEFT JOIN [default/todos] b ON json_extract(a.data, '$.routine_id') = json_extract(b.data, '$.routine_id')
        WHERE isCheckable = false
        AND hasChecklist = true
        GROUP BY routine_id
        
children:
  - type: component.custom-component
    componentId: header-component
    inputs:
      avatar: https://t14345253.p.clickup-attachments.com/t14345253/78f1ae20-94cd-438b-90dd-92812838e663/avatar1.png?view=open
      welcomeMessage: Hello, Jane! ðŸ‘‹
      name: Jane
      date: =$fromMillis($toMillis($now()), '[FNn], [D]. [M]. [Y]')
      gems: =$sum(@ctx.datasources.results.gems) + $sum(@ctx.datasources.mood-checkins-gems.gems)
  - type: component.custom-component
    componentId: title
    inputs:
      title: Reminders
      subtitle: =$count(@ctx.datasources.reminders) != 0 ? null:'You are all done! ðŸŽ‰'
  - type: component.list
    options:
      data: =@ctx.datasources.reminders
      maximumItemsToRender: 8
      isHorizontal: true
      isHorizontalScrollIndicatorHidden: true
      item:
        type: component.custom-component
        componentId: reminder
        inputs:
          reminder: =@ctx.current.item
          today: =@ctx.datasources.actual-day-and-mood.date
          mood: =@ctx.datasources.actual-day-and-mood.mood
          actualDayData: =@ctx.datasources.actual-day-and-mood
  - type: component.custom-component
    componentId: title
    inputs:
      title: Mood checkins
      link: mood-recap-composite
      icon: arrow-right
      subtitle: =$fromMillis($toMillis(@ctx.datasources.mood-checkins[0].dayDate), '[D01]. [M01].') & ' - ' & $fromMillis($toMillis(@ctx.datasources.mood-checkins[4].dayDate), '[D01]. [M01]. [Y]')
  - type: component.list
    options:
      data: =@ctx.datasources.mood-checkins
      maximumItemsToRender: 5
      isHorizontal: true
      isHorizontalScrollIndicatorHidden: true
      item:
        type: component.custom-component
        componentId: checkins-calendar-item
        inputs:
          checkins: =@ctx.current.item
          goTo: true
          numberOfActualDay: =@ctx.datasources.actualDay.day
  - type: component.custom-component
    componentId: title
    inputs: 
      title: Learnings
      icon: arrow-righ
  - type: component.list
    options:
      data: =@ctx.datasources.strategies-with-steps
      maximumItemsToRender: 8
      isHorizontal: true
      isHorizontalScrollIndicatorHidden: true
      item:
        type: component.custom-component
        componentId: strategy-preview-card
        inputs:
          strategies: =@ctx.current.item
          numberOfSteps: =@ctx.current.item.total_steps
          isDoneNumber: =@ctx.current.item.isDoneNumber
          goTo: true
          strategyId: =@ctx.jig.inputs.strategyId
  # - type: component.list
  #   options:
  #     data: =@ctx.datasources.routines-with-todos
  #     maximumItemsToRender: 8
  #     isHorizontal: true
  #     isHorizontalScrollIndicatorHidden: true
  #     item:
  #       type: component.custom-component
  #       componentId: routine-card-component
  #       inputs:
  #         routines: =@ctx.current.item
  #         numberOfSteps: =@ctx.current.item.total_todos
  #         isDoneNumber: =@ctx.current.item.isDoneNumber