type: component.default
children:
  - type: component.view
    when: =@ctx.inputs.steps.isRevealed = 1 ? true:false
    options:
      style:
        margin: 
          bottom: small
      children:
        - type: component.card
          options:
            children:
              - type: component.view
                options:
                  style:
                    position: relative
                    gap: small
                  children:
                    - type: component.view
                      options:
                        style:
                          flex: 
                            grow: 1
                            shrink: 1
                          gap: small
                        children:
                          - type: component.text
                            options:
                              value: ='Step ' & @ctx.inputs.steps.step
                              size: medium
                              weight: semi-bold
                          - type: component.text
                            options:
                              value: =@ctx.inputs.steps.title

                    - type: component.view
                      options:
                        style:
                          flex: 
                            grow: 1  
                            shrink: 1
                            basis: 1
                          gap: small
                          padding:
                            top: medium
                        children:
                          - type: component.view
                            options:
                              style:
                                alignItems: flex-end
                                justifyContent: flex-end
                                gap: small
                                emphasis: medium
                              children:
                                - type: component.text
                                  when: =@ctx.inputs.steps.isChecked = 0 and @ctx.solution.state.countdown-finished = false
                                  options:
                                    value: 'Work on this step at least:'
                                    size: small
                                    align: center
                                - type: component.countdown
                                  when: =@ctx.inputs.steps.isChecked = 0 and @ctx.solution.state.countdown-finished = false
                                  options:
                                    size: small
                                    align: right
                                    expiresAt: =$fromMillis($toMillis(@ctx.solution.state.countdown-start) + (30 * 1000))
                                    # expiresAt: =$fromMillis($toMillis(@ctx.solution.state.countdown-start) + (2 * 60 * 1000))
                                    onFinish: 
                                      type: action.action-list
                                      options:
                                        isSequential: true
                                        actions:
                                          - type: action.reset-state
                                            options:
                                              state: =@ctx.solution.state.countdown-start
                                          - type: action.set-state
                                            options:
                                              state: =@ctx.solution.state.countdown-finished
                                              value: true
                          - type: component.button
                            when: =@ctx.inputs.steps.isChecked = 0
                            options:
                              title: =@ctx.inputs.steps.step = @ctx.inputs.numberOfSteps ? 'Check last step':'Reveal next step'
                              type: secondary
                              isCompact: true
                              style:
                                isDisabled: =(@ctx.datasources.steps[strategy_id = @ctx.inputs.strategyId and step != 1]) or (@ctx.solution.state.countdown-finished = true) ? false:true 
                              onPress: 
                                type: action.action-list
                                options:
                                  isSequential: true
                                  actions:
                                    - type: action.execute-entity
                                      # when: =@ctx.inputs.numberOfSteps != @ctx.inputs.isDoneCount ? true:false
                                      when: =@ctx.datasources.steps[strategy_id = @ctx.inputs.steps.strategy_id and step = @ctx.inputs.steps.step].step != @ctx.inputs.numberOfSteps
                                      options:
                                        provider: DATA_PROVIDER_DYNAMIC
                                        entity: default/steps
                                        method: update
                                        goBack: stay
                                        data:
                                          id: =@ctx.datasources.steps[strategy_id = @ctx.inputs.steps.strategy_id and step = @ctx.inputs.steps.step + 1].id
                                          isRevealed: true
                                    - type: action.execute-entity
                                      options:
                                        provider: DATA_PROVIDER_DYNAMIC
                                        entity: default/steps
                                        method: update
                                        goBack: stay
                                        data:
                                          id: =@ctx.inputs.steps.id
                                          isChecked: true
                                    - type: action.set-state
                                      options:
                                        state: =@ctx.solution.state.countdown-finished
                                        value: false
                                    - type: action.set-state
                                      when: =@ctx.datasources.steps[strategy_id = @ctx.inputs.steps.strategy_id and step = @ctx.inputs.steps.step].step != @ctx.inputs.numberOfSteps
                                      options:
                                        state: =@ctx.solution.state.countdown-start
                                        value: =$now()
                                    - type: action.set-state
                                      when: =@ctx.datasources.steps[strategy_id = @ctx.inputs.steps.strategy_id and step = @ctx.inputs.steps.step].step = @ctx.inputs.numberOfSteps
                                      options:
                                        state: =@ctx.solution.state.activityFinishTime
                                        value: =$now()
                          - type: component.view
                            options:
                              style:
                                alignSelf: flex-end
                              children:
                                - type: component.icon
                                  when: =@ctx.inputs.steps.isChecked = 1
                                  options:
                                    icon: check-circle-1
                                    size: large
                                    color: positive
  - type: component.view
    when: =@ctx.datasources.steps[strategy_id = @ctx.inputs.steps.strategy_id and step = @ctx.inputs.steps.step].step = @ctx.inputs.numberOfSteps and @ctx.datasources.steps[strategy_id = @ctx.inputs.steps.strategy_id and step = @ctx.inputs.steps.step].isChecked = 1 ? true:false
    options:
      style:
        margin:
          vertical: large
      children:
        - type: component.text
          options:
            value: Hurray!! ðŸŽŠ
            align: center
            size: large
            weight: bold
        - type: component.view
          options:
            style:
              margin: 
                top: medium
                bottom: medium
            children:
              - type: component.text
                options:
                  value: 'You finished this strategy in:'
                  align: center
                  size: medium
                  weight: medium
              - type: component.view
                options:
                  style:
                    margin: 
                      top: small
                  children:
                    - type: component.text
                      options:
                        align: center
                        size: regular
                        weight: semi-bold
                        value: =$type(@ctx.solution.state.activityFinishTime) != null ? $fromMillis($toMillis(@ctx.solution.state.activityFinishTime) - $toMillis(@ctx.solution.state.activityStartTime), '[m01]') & ' min. ' & $fromMillis($toMillis(@ctx.solution.state.activityFinishTime) - $toMillis(@ctx.solution.state.activityStartTime), '[s01]') & ' sec.':'jfsfjao'
        - type: component.view
          options:
            style:
              gap: small
              padding: 
                top: medium
            children:
              - type: component.image
                options:
                  size: 
                    height: 100
                  resizeMode: contain
                  source:
                    uri: https://t14345253.p.clickup-attachments.com/t14345253/c174df1c-561f-4da2-b827-32e6535916eb/Treasure.png?view=open
              - type: component.text
                options:
                  value: + 20 gems
                  size: medium
                  color: color11
                  align: center